import math
import scipy
import scipy.stats
import numpy as np

result = 0.0
cdf = 0.0
def cumm_dens_function(t):
    z = abs(t)
    y = 1/(1 + 0.2316419*z)
    a1 = 0.319381530 
    a2 = -0.356563782
    a3 = 1.781477937
    a4 = -1.821255978
    a5 = 1.330274429
    
    cdf = 1 - math.exp(-t**2/2)*(a1*y + a2*y**2 + a3*y**3 + a4*y**4+a5*y**5)/math.sqrt(2*math.pi)
    
    if t > 0:
        result = cdf
    else:
        result = 1 - cdf
        
    return result

def cumm_dens_function_scipy(t):
    return scipy.stats.norm.cdf(t)

def blackScholes(t,S,K,T,a,r,q,Type):
    #t = beginning time
    #S = Spot Price
    #K = Strike
    #T = Maturity
    #a = volatility
    #r = constant interest rate
    #q = continous dividend rate of the underlying asset
    #Type can be call or put - enter as strings e.g. 'call' or 'put'
    call = 0.0
    put = 0.0
    d1 =0.0
    d2 = 0.0
    S = float(S)
    K = float(K)
    
    d1 = (np.log(S/K) +(r - q + a**2/2)*(T - t))/(a*math.sqrt(T-t))
    d2 = d1 - (a*math.sqrt(T-t))
    
    call = S*math.exp(-q*(T-t))*cumm_dens_function_scipy(d1) - K*math.exp(-r*(T-t))*cumm_dens_function_scipy(d2)
    put = K*math.exp(-r*(T-t))*cumm_dens_function_scipy(-d2) - S*math.exp(-q*(T-t))*cumm_dens_function_scipy(-d1)
    
    if Type == 'call':
        return call
    else:
        return put
print("")
print("The value of a call with the given parameters is : " + str(blackScholes(0,42.0,40.0,0.5,0.3,0.05,0.03,'call')))
print("")
print("The value of a put with the given parameters is : " + str(blackScholes(0,42.0,40.0,0.5,0.3,0.05,0.03,'put'))) 
